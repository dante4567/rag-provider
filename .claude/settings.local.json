{
  "permissions": {
    "allow": [
      "Bash(/usr/bin/curl -s -X POST http://localhost:8001/ingest/file -F file=@/tmp/test_dates_query.md -F generate_obsidian=true -o /tmp/dates_query_test.json)",
      "Bash(/usr/bin/curl -s -X POST http://localhost:8001/ingest/file -F file=@/tmp/comprehensive_entity_test.md -F generate_obsidian=true -o /tmp/dates_fix_test.json)",
      "Read(//Users/danielteckentrup/Documents/**)",
      "Bash(/tmp/comprehensive_test.sh:*)",
      "Bash(/tmp/comprehensive_test_fixed.sh:*)",
      "Bash(xargs docker exec:*)",
      "Bash(/usr/bin/curl -s -X POST http://localhost:8001/ingest/file -F \"file=@/tmp/test_dates_doc.md\" -F \"generate_obsidian=true\" -o /tmp/test_dates_result.json)",
      "Bash(/usr/bin/curl -s -X POST http://localhost:8001/ingest/file -F \"file=@/tmp/test_dates_doc.md\" -F \"generate_obsidian=true\" -o /tmp/test_dates_fixed.json)",
      "Bash(/usr/bin/curl -s -X POST http://localhost:8001/ingest/file -F \"file=@/tmp/test_dates_doc.md\" -F \"generate_obsidian=true\" -o /tmp/test_dates_working.json)",
      "Bash(/usr/bin/curl -s -X POST http://localhost:8001/ingest/file -F \"file=@/tmp/test_dates_doc.md\" -F \"generate_obsidian=true\")",
      "Bash(/tmp/test_60_docs.sh:*)",
      "Bash(/usr/bin/curl -s -X POST http://localhost:8001/ingest/file -F \"file=@/Users/danielteckentrup/Documents/villa-luna/20230127-Ringelr√∂telfall-70567.eml\" -F \"generate_obsidian=true\" --max-time 60)",
      "Bash(bash:*)",
      "Bash(docker system prune:*)",
      "Bash(curl:*)",
      "Bash(docker-compose:*)",
      "Bash(pgrep:*)",
      "Bash(docker exec:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\n‚ú® Add entity type validation - Prevent software from being classified as people\n\n**Problem:** Tools/software being extracted as person entities\n- Examples: \"Studio Code\", \"Virtual Machine\", \"Apple Calendar\", \"Jupyter Notebook\"\n- Cluttered person list (~10 false positives out of 81)\n\n**Solution:**\n- Field validator in Person model with software keyword blocklist\n- Validates against 40+ common software indicators\n- Checks for version patterns (v1, v2, 2.0, pro, plus, etc.)\n- Improved docstrings clarifying people vs technologies distinction\n\n**Implementation:**\n- Pydantic field_validator in Person.name\n- Raises ValueError if software/tool detected\n- Suggests using ''technologies'' field instead\n\n**Impact:**\n- Cleaner person entity list (only real humans)\n- Better entity type accuracy\n- Improved knowledge graph quality\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nüîß Improve reranking service error handling\n\n**Changes:**\n- Add explicit device handling (CPU/CUDA) with torch.device context\n- Better error logging with exception types and PyTorch version\n- Improved ImportError handling\n\n**Context:**\n- Addresses potential PyTorch 2.x meta tensor issues\n- Better debugging information for model loading failures\n- Note: Reranking currently disabled (ENABLE_RERANKING=false)\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(for file in /Users/danielteckentrup/Documents/villa-luna/*.eml)",
      "Bash(jq:*)",
      "Bash(xargs:*)",
      "Bash(cat:*)",
      "Read(///**)",
      "Bash(for:*)",
      "Bash(docker logs:*)",
      "Bash(docker cp:*)",
      "Bash(do echo \"Ingesting: $file\" curl -s -X POST http://localhost:8001/ingest/file -F \"file=@$file\" --max-time 30)",
      "Bash(python3:*)",
      "Bash(chmod:*)",
      "Bash(while IFS= read -r file)",
      "Bash(tee:*)",
      "Bash(timeout 30 curl -s -X POST http://localhost:8001/ingest/file -F \"file=@/tmp/triage_test.md\")",
      "Bash(/tmp/ingest_10_emails.sh:*)",
      "Bash(awk:*)",
      "Bash(/tmp/ingest_50_emails.sh:*)",
      "Bash(echo:*)"
    ],
    "deny": [],
    "ask": []
  }
}