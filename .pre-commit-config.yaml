# Pre-commit hooks configuration
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Python code formatting with black
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=120]

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=120]

  # Python linting with ruff (fast, modern)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]

  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--unsafe]  # Allow custom YAML tags
      - id: check-added-large-files
        args: [--maxkb=500]
      - id: check-merge-conflict
      - id: check-json
      - id: detect-private-key
      - id: mixed-line-ending

  # Security checks - detect secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: |
          (?x)^(
            \.env\.example|
            tests/fixtures/.*
          )$

  # Run pytest on changed test files (optional - can be slow)
  # Uncomment if you want tests to run on commit
  # - repo: local
  #   hooks:
  #     - id: pytest
  #       name: pytest
  #       entry: pytest
  #       language: system
  #       types: [python]
  #       files: ^tests/
  #       args: [-v, --tb=short]
  #       pass_filenames: false

# Skip hooks for specific commits:
# SKIP=black,ruff git commit -m "WIP"
